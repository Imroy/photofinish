Photo Finish is a set of command-line tools for automatically processing digital images with a focus on film scans. The eponymous <tt>photofinish</tt> crops, scales, and converts images in the (presumably) last stage of publishing a photo. I run a "hybrid" work-flow that starts with film scans, but this could also be of use to digital photographers.

A second tool, <tt>process_scans</tt> converts original TIFF scans into PNG or JP2 (JPEG 2000) files, in a sub-directory, and produces scaled previews. The conversion is useful because most software working with TIFF files does not use any compression. Saving 10~20&nbsp;MB might not sound like much, but after scanning a whole roll of film (36+ exposures) it quickly adds up. Producing scaled previews and moving the originals to a sub-directory is useful because many programs want to create thumbnails of image files and this can be a very slow process with large, high-resolution scans (e.g ~120&nbsp;MB each), especially over a network. So use the previews to identify a scan and open the original file manually.

The rest of this page deals primarily with <tt>photofinish</tt>, although all tools use the same library of classes.

== Description ==

So what does Photo Finish do?

# It decides on the correct cropping window for a specified "destination"
# Does the crop and rescaling
# Saves the result with custom EXIF/IPTC/XMP metadata


== Features ==

My focus has been on image quality and correctness, so many computations are done in floating-point. The 1990's are long passed, so why limit ourselves to small integers? We have the computational power and memory storage to easily do this the right way.


* The list of "destinations" is read from a YAML file
** Destinations describe the size, format, and other specifics of the output
* Each input file can have its own list of "tags" - EXIF/IPTC/XMP metadata, as well as "variables", some of which override destination parameters
** This is an artefact of my original shell script (which used exiftool) and expanded in my Perl version (using [http://www.sno.phy.queensu.ca/~phil/exiftool/ Image::Exiftool]); perhaps this should be replaced by YAML?


=== Image file formats ===

* Reads and writes JPEG, PNG, TIFF, JP2 (JPEG 2000), WebP, JPEG XR (JXR) files
* Supports having an alpha channel in PNG, TIFF, WebP, JPEG XR files
* Embedded ICC profiles are used when reading, and created when writing
* Falls back to sRGB or a similar greyscale profile
* Reads CMYK image data from JPEG and TIFF files (requires an embedded ICC profile)


=== Data structures and processing ===

* Before rescaling, image pixel data is transformed into the [http://en.wikipedia.org/wiki/Lab_color_space CIE L*a*b* colour space] using floating-point components
** This colour space is perceptually uniform, so it is ideal for rescaling of images
** Even when the input and output(s) are greyscale, this colour space is used (partly for simplicity, but also because greyscale can have colour to it)
** Configurable as either single or double precision at compile-time (DP adds almost nothing in my limited tests)
* Rescaling is done using a Lanczos filter
* OpenMP is used in several places to take advantage of SMP systems


== Current limitations ==

* Probably only compiles on Linux for now


== Todo ==

* Add other image formats e.g RAW formats (reading only)
* Use YAML (or something else?) for the "tags" format

Crazy idea:
* An entirely workqueue-based version to keep multiple processors/cores busy at all time


== Libraries ==

Photo Finish currently uses the following libraries:
* [http://www.libpng.org/ LibPNG] for reading and writing PNG files
* [http://www.ijg.org/ IJG]'s LibJPEG for reading and writing JPEG files
* [http://www.remotesensing.org/libtiff/ libTIFF] for reading and writing PNG files
* [http://www.openjpeg.org/ OpenJPEG] for reading and writing JPEG 2000 files
* [https://developers.google.com/speed/webp/docs/api libwebp] for reading and writing WebP files
* [https://jxrlib.codeplex.com/ jxrlib] for reading and writing JPEG XR files
* [http://www.littlecms.com/ Little CMS] (LCMS) for transforming between colour profiles
* [http://code.google.com/p/yaml-cpp/ libyaml] for reading YAML data files
* [http://www.exiv2.org/ EXIV] for EXIF/IPTC/XMP metadata
* Several boost libraries:
** [http://www.boost.org/doc/libs/1_50_0/libs/filesystem/doc/ Boost.Filesystem]
** [http://www.boost.org/doc/libs/1_50_0/doc/html/program_options.html Boost.Program_options]
** [http://www.boost.org/doc/libs/1_50_0/doc/html/boost_lexical_cast.html Boost.Lexical_Cast]
** a bit of [http://www.boost.org/doc/libs/1_50_0/libs/algorithm/doc/html/index.html Boost.Algorithm] (iequals)


== License ==

Copyright 2012-2013 Ian Tester &lt;imroykun&#x40;gmail.com&gt;

Photo Finish is licensed under the GNU GPL version 3 or later.
