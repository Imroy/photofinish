{"google":"","name":"Photofinish","body":"Photo Finish is a set of command-line tools for automatically processing digital images, with a focus on film scans. The eponymous `photofinish` crops, scales, and converts images in the (presumably) last stage of publishing a photo. I run a \"hybrid\" work-flow that starts with film scans, but this could also be of use to digital photographers.\r\n\r\nA second tool, `process_scans` converts original TIFF scans into PNG or JP2 (JPEG 2000) files, in a sub-directory, and produces scaled previews. The conversion is useful because most software working with TIFF files does not use any compression. Saving 10~20&nbsp;MB might not sound like much, but after scanning a whole roll of film (36+ exposures) it quickly adds up. Producing scaled previews and moving the originals to a sub-directory is useful because many programs want to create thumbnails of image files and this can be a very slow process with large, high-resolution scans (e.g ~120&nbsp;MB each), especially over a network. So use the previews to identify a scan and open the original file manually.\r\n\r\nThe rest of this page deals primarily with `photofinish`, although all tools use the same library of classes.\r\n\r\n# Description\r\n\r\nSo what does Photo Finish do?\r\n\r\n1. It decides on the correct cropping window for a specified \"destination\"\r\n1. Does the crop and rescaling\r\n1. Saves the result with custom EXIF/IPTC/XMP metadata\r\n\r\n\r\n# Features\r\n\r\nMy focus has been on image quality and correctness, so many computations are done in floating-point. The 1990's are long passed, so why limit ourselves to small integers? We have the computational power and memory storage to easily do this the right way.\r\n\r\n\r\n* The list of \"destinations\" is read from a YAML file\r\n * Destinations describe the size, format, and other specifics of the output\r\n* Each input file can have its own list of \"tags\" - EXIF/IPTC/XMP metadata, as well as \"variables\", some of which override destination parameters\r\n * This is an artefact of my original shell script (which used exiftool) and expanded in my Perl version (using [Image::Exiftool](http://www.sno.phy.queensu.ca/~phil/exiftool/)); perhaps this should be replaced by YAML?\r\n\r\n\r\n## Image file formats\r\n\r\n* Reads and writes JPEG, PNG, TIFF, JP2 (JPEG 2000) files\r\n* Embedded ICC profiles are used when reading, and created when writing\r\n* Falls back to sRGB or a similar greyscale profile\r\n* Reads CMYK image data from JPEG and TIFF files (requires an embedded ICC profile)\r\n\r\n\r\n## Data structures and processing\r\n\r\n* Image pixel data is stored internally in the [CIE L* a* b* colour space](http://en.wikipedia.org/wiki/Lab_color_space) using floating-point components\r\n * This colour space is perceptually uniform, so it is ideal for rescaling of images\r\n * Even when the input and output(s) are greyscale, this colour space is used (partly for simplicity, but also because greyscale can have colour to it)\r\n * Configurable as either single or double precision at compile-time (DP adds almost nothing in my limited tests)\r\n* Rescaling is done using a Lanczos filter\r\n* OpenMP is used in several places to take advantage of SMP systems\r\n* Dithers using Floyd-Steinberg error diffusion when producing 8-bit component output\r\n * Not sure if this improves the output or not, it just seemed like the right thing to do\r\n\r\n\r\n# Current limitations\r\n\r\n* Probably only compiles on Linux for now\r\n\r\n\r\n# Todo\r\n\r\n* Add other image formats e.g RAW formats (reading only)\r\n* Use YAML (or something else?) for the \"tags\" format\r\n\r\nCrazy idea:\r\n* An entirely workqueue-based version to keep multiple processors/cores busy at all time\r\n\r\n\r\n# Libraries\r\n\r\nPhoto Finish currently uses the following libraries:\r\n* [LibPNG](http://www.libpng.org/) for reading and writing PNG files\r\n* [IJG](http://www.ijg.org/)'s LibJPEG for writing JPEG's\r\n* [libTIFF](http://www.remotesensing.org/libtiff/) for reading and writing PNG files\r\n* [Little CMS](http://www.littlecms.com/) (LCMS) for transforming between colour profiles\r\n* [libyaml-cpp](http://code.google.com/p/yaml-cpp/) for reading YAML data files\r\n* [EXIV2](http://www.exiv2.org/) for EXIF/IPTC/XMP metadata\r\n* Several boost libraries:\r\n * [Boost.Filesystem](http://www.boost.org/doc/libs/1_50_0/libs/filesystem/doc/)\r\n * [Boost.Program_options](http://www.boost.org/doc/libs/1_50_0/doc/html/program_options.html)\r\n * [Boost.Lexical_Cast](http://www.boost.org/doc/libs/1_50_0/doc/html/boost_lexical_cast.html)\r\n * a bit of [Boost.Algorithm](http://www.boost.org/doc/libs/1_50_0/libs/algorithm/doc/html/index.html) (iequals)\r\n\r\n\r\n# License\r\n\r\nCopyright 2012 Ian Tester &lt;imroykun&#x40;gmail.com&gt;\r\n\r\nPhoto Finish is licensed under the GNU GPL version 3 or later.","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Tools for processing digital images, with a focus on film scans"}